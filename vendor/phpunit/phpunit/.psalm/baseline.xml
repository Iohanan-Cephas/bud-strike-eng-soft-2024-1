<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.23.0@005e3184fb6de4350a873b9b8c4dc3cede9db762">
  <file src="src/Framework/Assert.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$actualElement->childNodes->item($i)]]></code>
      <code><![CDATA[$expectedElement->childNodes->item($i)]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedClass>
      <code><![CDATA[ClassHasAttribute]]></code>
      <code><![CDATA[ClassHasStaticAttribute]]></code>
      <code><![CDATA[ObjectHasAttribute]]></code>
      <code><![CDATA[new ClassHasAttribute($attributeName)]]></code>
      <code><![CDATA[new ClassHasAttribute($attributeName)]]></code>
      <code><![CDATA[new ClassHasAttribute($attributeName)]]></code>
      <code><![CDATA[new ClassHasStaticAttribute($attributeName)]]></code>
      <code><![CDATA[new ClassHasStaticAttribute($attributeName)]]></code>
      <code><![CDATA[new ClassHasStaticAttribute($attributeName)]]></code>
      <code><![CDATA[new ObjectHasAttribute($attributeName)]]></code>
      <code><![CDATA[new ObjectHasAttribute($attributeName)]]></code>
      <code><![CDATA[new ObjectHasAttribute($attributeName)]]></code>
    </DeprecatedClass>
    <DeprecatedMethod>
      <code><![CDATA[Xml::import($actualElement)]]></code>
      <code><![CDATA[Xml::import($expectedElement)]]></code>
      <code><![CDATA[Xml::removeCharacterDataNodes($actualElement)]]></code>
      <code><![CDATA[Xml::removeCharacterDataNodes($expectedElement)]]></code>
      <code><![CDATA[static::assertEqualXMLStructure(
                $expectedElement->childNodes->item($i),
                $actualElement->childNodes->item($i),
                $checkAttributes,
                $message,
            )]]></code>
    </DeprecatedMethod>
    <DocblockTypeContradiction>
      <code><![CDATA[!$actual instanceof Countable && !is_iterable($actual)]]></code>
      <code><![CDATA[!$actual instanceof Countable && !is_iterable($actual)]]></code>
      <code><![CDATA[!$expected instanceof Countable && !is_iterable($expected)]]></code>
      <code><![CDATA[!$expected instanceof Countable && !is_iterable($expected)]]></code>
      <code><![CDATA[!$haystack instanceof Countable && !is_iterable($haystack)]]></code>
      <code><![CDATA[!$haystack instanceof Countable && !is_iterable($haystack)]]></code>
      <code><![CDATA[is_int($key) || is_string($key)]]></code>
      <code><![CDATA[is_int($key) || is_string($key)]]></code>
      <code><![CDATA[is_object($object)]]></code>
      <code><![CDATA[is_object($object)]]></code>
      <code><![CDATA[is_string($key)]]></code>
      <code><![CDATA[is_string($key)]]></code>
    </DocblockTypeContradiction>
    <MissingParamType>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$attributeName]]></code>
      <code><![CDATA[$condition]]></code>
      <code><![CDATA[$condition]]></code>
      <code><![CDATA[$condition]]></code>
      <code><![CDATA[$condition]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$needle]]></code>
      <code><![CDATA[$needle]]></code>
      <code><![CDATA[$needle]]></code>
      <code><![CDATA[$needle]]></code>
      <code><![CDATA[$prefix]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
    </MissingParamType>
    <MissingThrowsDocblock>
      <code><![CDATA[loadFile]]></code>
      <code><![CDATA[loadFile]]></code>
      <code><![CDATA[loadFile]]></code>
      <code><![CDATA[loadFile]]></code>
      <code><![CDATA[new IsType($type)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_ARRAY)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_ARRAY)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_BOOL)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_BOOL)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_CALLABLE)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_CALLABLE)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_CLOSED_RESOURCE)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_CLOSED_RESOURCE)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_FLOAT)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_FLOAT)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_INT)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_INT)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_ITERABLE)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_ITERABLE)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_NUMERIC)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_NUMERIC)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_OBJECT)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_OBJECT)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_RESOURCE)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_RESOURCE)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_SCALAR)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_SCALAR)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_STRING)]]></code>
      <code><![CDATA[new IsType(IsType::TYPE_STRING)]]></code>
      <code><![CDATA[new TraversableContainsOnly(
                    $type,
                    $isNativeType,
                )]]></code>
      <code><![CDATA[new TraversableContainsOnly(
                $className,
                false,
            )]]></code>
      <code><![CDATA[new TraversableContainsOnly(
                $type,
                $isNativeType,
            )]]></code>
      <code><![CDATA[new TraversableContainsOnly($className, false)]]></code>
      <code><![CDATA[new TraversableContainsOnly($type)]]></code>
      <code><![CDATA[static::assertThat(
            $actual,
            static::objectEquals($expected, $method),
            $message,
        )]]></code>
      <code><![CDATA[static::assertThat(
            $object,
            new LogicalNot(
                new ObjectHasProperty($propertyName),
            ),
            $message,
        )]]></code>
      <code><![CDATA[static::assertThat(
            $object,
            new ObjectHasProperty($propertyName),
            $message,
        )]]></code>
      <code><![CDATA[static::assertThat($haystack, $constraint, $message)]]></code>
      <code><![CDATA[static::assertThat($haystack, $constraint, $message)]]></code>
      <code><![CDATA[static::assertThat($haystack, $constraint, $message)]]></code>
      <code><![CDATA[static::assertThat($haystack, $constraint, $message)]]></code>
    </MissingThrowsDocblock>
    <PossiblyInvalidArgument>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
    </PossiblyInvalidArgument>
    <RedundantCondition>
      <code><![CDATA[assert($step['object'] instanceof TestCase)]]></code>
    </RedundantCondition>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$hint = self::detectLocationHint($message)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Framework/Assert/Functions.php">
    <DeprecatedClass>
      <code><![CDATA[ClassHasAttribute]]></code>
      <code><![CDATA[ClassHasStaticAttribute]]></code>
      <code><![CDATA[InvokedAtIndexMatcher]]></code>
      <code><![CDATA[ObjectHasAttribute]]></code>
      <code><![CDATA[new InvokedAtIndexMatcher($index)]]></code>
    </DeprecatedClass>
    <DeprecatedMethod>
      <code><![CDATA[Assert::assertClassHasAttribute(...func_get_args())]]></code>
      <code><![CDATA[Assert::assertClassHasStaticAttribute(...func_get_args())]]></code>
      <code><![CDATA[Assert::assertClassNotHasAttribute(...func_get_args())]]></code>
      <code><![CDATA[Assert::assertClassNotHasStaticAttribute(...func_get_args())]]></code>
      <code><![CDATA[Assert::assertDirectoryNotExists(...func_get_args())]]></code>
      <code><![CDATA[Assert::assertDirectoryNotIsReadable(...func_get_args())]]></code>
      <code><![CDATA[Assert::assertDirectoryNotIsWritable(...func_get_args())]]></code>
      <code><![CDATA[Assert::assertEqualXMLStructure(...func_get_args())]]></code>
      <code><![CDATA[Assert::assertFileNotExists(...func_get_args())]]></code>
      <code><![CDATA[Assert::assertFileNotIsReadable(...func_get_args())]]></code>
      <code><![CDATA[Assert::assertFileNotIsWritable(...func_get_args())]]></code>
      <code><![CDATA[Assert::assertNotIsReadable(...func_get_args())]]></code>
      <code><![CDATA[Assert::assertNotIsWritable(...func_get_args())]]></code>
      <code><![CDATA[Assert::assertNotRegExp(...func_get_args())]]></code>
      <code><![CDATA[Assert::assertObjectHasAttribute(...func_get_args())]]></code>
      <code><![CDATA[Assert::assertObjectNotHasAttribute(...func_get_args())]]></code>
      <code><![CDATA[Assert::assertRegExp(...func_get_args())]]></code>
      <code><![CDATA[Assert::classHasAttribute(...func_get_args())]]></code>
      <code><![CDATA[Assert::classHasStaticAttribute(...func_get_args())]]></code>
      <code><![CDATA[Assert::objectHasAttribute(...func_get_args())]]></code>
    </DeprecatedMethod>
    <MissingParamType>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$actual]]></code>
      <code><![CDATA[$attributeName]]></code>
      <code><![CDATA[$callback]]></code>
      <code><![CDATA[$condition]]></code>
      <code><![CDATA[$condition]]></code>
      <code><![CDATA[$condition]]></code>
      <code><![CDATA[$condition]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$key]]></code>
      <code><![CDATA[$needle]]></code>
      <code><![CDATA[$needle]]></code>
      <code><![CDATA[$needle]]></code>
      <code><![CDATA[$needle]]></code>
      <code><![CDATA[$prefix]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
    </MissingParamType>
    <MissingThrowsDocblock>
      <code><![CDATA[Assert::logicalAnd(...func_get_args())]]></code>
    </MissingThrowsDocblock>
    <TooManyArguments>
      <code><![CDATA[Assert::anything(...func_get_args())]]></code>
      <code><![CDATA[Assert::directoryExists(...func_get_args())]]></code>
      <code><![CDATA[Assert::fileExists(...func_get_args())]]></code>
      <code><![CDATA[Assert::isEmpty(...func_get_args())]]></code>
      <code><![CDATA[Assert::isFalse(...func_get_args())]]></code>
      <code><![CDATA[Assert::isFinite(...func_get_args())]]></code>
      <code><![CDATA[Assert::isInfinite(...func_get_args())]]></code>
      <code><![CDATA[Assert::isJson(...func_get_args())]]></code>
      <code><![CDATA[Assert::isNan(...func_get_args())]]></code>
      <code><![CDATA[Assert::isNull(...func_get_args())]]></code>
      <code><![CDATA[Assert::isReadable(...func_get_args())]]></code>
      <code><![CDATA[Assert::isTrue(...func_get_args())]]></code>
      <code><![CDATA[Assert::isWritable(...func_get_args())]]></code>
    </TooManyArguments>
  </file>
  <file src="src/Framework/Constraint/Cardinality/Count.php">
    <MissingParamType>
      <code><![CDATA[$other]]></code>
    </MissingParamType>
    <MissingThrowsDocblock>
      <code><![CDATA[getCountOf]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/Framework/Constraint/Cardinality/SameSize.php">
    <MissingThrowsDocblock>
      <code><![CDATA[getCountOf]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/Framework/Constraint/Constraint.php">
    <MissingParamType>
      <code><![CDATA[$other]]></code>
    </MissingParamType>
  </file>
  <file src="src/Framework/Constraint/Equality/IsEqual.php">
    <MissingParamType>
      <code><![CDATA[$other]]></code>
      <code><![CDATA[$value]]></code>
    </MissingParamType>
  </file>
  <file src="src/Framework/Constraint/Equality/IsEqualCanonicalizing.php">
    <MissingParamType>
      <code><![CDATA[$other]]></code>
      <code><![CDATA[$value]]></code>
    </MissingParamType>
  </file>
  <file src="src/Framework/Constraint/Equality/IsEqualIgnoringCase.php">
    <MissingParamType>
      <code><![CDATA[$other]]></code>
      <code><![CDATA[$value]]></code>
    </MissingParamType>
  </file>
  <file src="src/Framework/Constraint/Equality/IsEqualWithDelta.php">
    <MissingParamType>
      <code><![CDATA[$other]]></code>
      <code><![CDATA[$value]]></code>
    </MissingParamType>
  </file>
  <file src="src/Framework/Constraint/Exception/Exception.php">
    <MissingThrowsDocblock>
      <code><![CDATA[Filter::getFilteredStacktrace($other)]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/Framework/Constraint/Exception/ExceptionCode.php">
    <MoreSpecificImplementedParamType>
      <code><![CDATA[$other]]></code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/Framework/Constraint/Exception/ExceptionMessage.php">
    <MoreSpecificImplementedParamType>
      <code><![CDATA[$other]]></code>
    </MoreSpecificImplementedParamType>
    <RedundantCast>
      <code><![CDATA[(string) $other->getMessage()]]></code>
    </RedundantCast>
  </file>
  <file src="src/Framework/Constraint/Exception/ExceptionMessageRegularExpression.php">
    <MoreSpecificImplementedParamType>
      <code><![CDATA[$other]]></code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/Framework/Constraint/IsAnything.php">
    <MissingParamType>
      <code><![CDATA[$other]]></code>
    </MissingParamType>
  </file>
  <file src="src/Framework/Constraint/IsIdentical.php">
    <MissingParamType>
      <code><![CDATA[$other]]></code>
      <code><![CDATA[$value]]></code>
    </MissingParamType>
  </file>
  <file src="src/Framework/Constraint/Object/ClassHasAttribute.php">
    <MissingThrowsDocblock>
      <code><![CDATA[throw new Exception(
                $e->getMessage(),
                $e->getCode(),
                $e,
            );]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/Framework/Constraint/Object/ClassHasStaticAttribute.php">
    <DeprecatedClass>
      <code><![CDATA[ClassHasAttribute]]></code>
    </DeprecatedClass>
    <MissingThrowsDocblock>
      <code><![CDATA[throw new Exception(
                $e->getMessage(),
                $e->getCode(),
                $e,
            );]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/Framework/Constraint/Object/ObjectEquals.php">
    <MissingThrowsDocblock>
      <code><![CDATA[getMethod]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/Framework/Constraint/Object/ObjectHasAttribute.php">
    <DeprecatedClass>
      <code><![CDATA[ClassHasAttribute]]></code>
    </DeprecatedClass>
    <MissingThrowsDocblock>
      <code><![CDATA[hasProperty]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/Framework/Constraint/Object/ObjectHasProperty.php">
    <MissingThrowsDocblock>
      <code><![CDATA[hasProperty]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/Framework/Constraint/Operator/BinaryOperator.php">
    <UnsafeInstantiation>
      <code><![CDATA[new static]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Framework/Constraint/Operator/LogicalNot.php">
    <MissingThrowsDocblock>
      <code><![CDATA[evaluate]]></code>
      <code><![CDATA[evaluate]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/Framework/Constraint/Operator/Operator.php">
    <MissingParamType>
      <code><![CDATA[$constraint]]></code>
    </MissingParamType>
  </file>
  <file src="src/Framework/Constraint/String/RegularExpression.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->pattern]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Framework/Constraint/String/StringMatchesFormatDescription.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$line]]></code>
    </ArgumentTypeCoercion>
    <MissingThrowsDocblock>
      <code><![CDATA[new Differ(new UnifiedDiffOutputBuilder("--- Expected\n+++ Actual\n"))]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/Framework/Constraint/String/StringStartsWith.php">
    <MissingThrowsDocblock>
      <code><![CDATA[throw InvalidArgumentException::create(1, 'non-empty string');]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/Framework/Constraint/Traversable/TraversableContains.php">
    <MissingParamType>
      <code><![CDATA[$value]]></code>
    </MissingParamType>
    <MissingReturnType>
      <code><![CDATA[value]]></code>
    </MissingReturnType>
  </file>
  <file src="src/Framework/Constraint/Type/IsInstanceOf.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->className]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Framework/DataProviderTestSuite.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$className]]></code>
    </ArgumentTypeCoercion>
    <PropertyNotSetInConstructor>
      <code><![CDATA[DataProviderTestSuite]]></code>
      <code><![CDATA[DataProviderTestSuite]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Framework/Exception/Exception.php">
    <MissingParamType>
      <code><![CDATA[$code]]></code>
      <code><![CDATA[$message]]></code>
    </MissingParamType>
    <MissingThrowsDocblock>
      <code><![CDATA[Filter::getFilteredStacktrace($this)]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/Framework/Exception/ExpectationFailedException.php">
    <PossiblyNullPropertyAssignmentValue>
      <code><![CDATA[$comparisonFailure]]></code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="src/Framework/ExceptionWrapper.php">
    <MissingThrowsDocblock>
      <code><![CDATA[Filter::getFilteredStacktrace($this)]]></code>
    </MissingThrowsDocblock>
    <PossiblyNullArgument>
      <code><![CDATA[$t->getPrevious()]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Framework/ExecutionOrderDependency.php">
    <PossiblyNullArgument>
      <code><![CDATA[$target]]></code>
      <code><![CDATA[$target]]></code>
    </PossiblyNullArgument>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$parts[1]]]></code>
    </PossiblyUndefinedArrayOffset>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[empty($methodName)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Framework/MockObject/Builder/Identity.php">
    <MissingReturnType>
      <code><![CDATA[id]]></code>
    </MissingReturnType>
  </file>
  <file src="src/Framework/MockObject/Builder/InvocationMocker.php">
    <DeprecatedClass>
      <code><![CDATA[new Rule\ConsecutiveParameters($arguments)]]></code>
    </DeprecatedClass>
    <MissingParamType>
      <code><![CDATA[$id]]></code>
      <code><![CDATA[$id]]></code>
    </MissingParamType>
  </file>
  <file src="src/Framework/MockObject/Builder/InvocationStubber.php">
    <MissingParamType>
      <code><![CDATA[$nextValues]]></code>
      <code><![CDATA[$value]]></code>
    </MissingParamType>
  </file>
  <file src="src/Framework/MockObject/Builder/ParametersMatch.php">
    <MissingParamType>
      <code><![CDATA[$arguments]]></code>
    </MissingParamType>
  </file>
  <file src="src/Framework/MockObject/ConfigurableMethod.php">
    <MissingParamType>
      <code><![CDATA[$value]]></code>
    </MissingParamType>
  </file>
  <file src="src/Framework/MockObject/Generator.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$arguments]]></code>
      <code><![CDATA[$arguments]]></code>
      <code><![CDATA[$className]]></code>
      <code><![CDATA[$className]]></code>
      <code><![CDATA[$interfaceName]]></code>
      <code><![CDATA[$methods]]></code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction>
      <code><![CDATA[!is_array($methods) && null !== $methods]]></code>
    </DocblockTypeContradiction>
    <InvalidReturnStatement>
      <code><![CDATA[$this->getMock(
                $originalClassName,
                $methods,
                $arguments,
                $mockClassName,
                $callOriginalConstructor,
                $callOriginalClone,
                $callAutoload,
                $cloneArguments,
            )]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[MockObject&RealInstanceType]]></code>
    </InvalidReturnType>
    <MissingParamType>
      <code><![CDATA[$type]]></code>
    </MissingParamType>
    <MissingReturnType>
      <code><![CDATA[getObject]]></code>
    </MissingReturnType>
    <MissingThrowsDocblock>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
    </MissingThrowsDocblock>
    <PossiblyNullArgument>
      <code><![CDATA[$client->__getFunctions()]]></code>
    </PossiblyNullArgument>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[!$parameterStart]]></code>
      <code><![CDATA[empty($methods)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Framework/MockObject/Invocation.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$types]]></code>
    </ArgumentTypeCoercion>
    <MissingThrowsDocblock>
      <code><![CDATA[throw $t;]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/Framework/MockObject/InvocationHandler.php">
    <MissingReturnType>
      <code><![CDATA[invoke]]></code>
    </MissingReturnType>
    <PropertyNotSetInConstructor>
      <code><![CDATA[$deferredError]]></code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->deferredError]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Framework/MockObject/Matcher.php">
    <DocblockTypeContradiction>
      <code><![CDATA[$this->methodNameRule === null]]></code>
      <code><![CDATA[$this->methodNameRule === null]]></code>
      <code><![CDATA[$this->methodNameRule === null]]></code>
      <code><![CDATA[$this->parametersRule === null]]></code>
    </DocblockTypeContradiction>
    <MissingReturnType>
      <code><![CDATA[invoked]]></code>
    </MissingReturnType>
    <PropertyNotSetInConstructor>
      <code><![CDATA[$methodNameRule]]></code>
      <code><![CDATA[$parametersRule]]></code>
      <code><![CDATA[$stub]]></code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->invocationRule !== null]]></code>
      <code><![CDATA[$this->methodNameRule !== null]]></code>
      <code><![CDATA[$this->methodNameRule !== null]]></code>
      <code><![CDATA[$this->parametersRule !== null]]></code>
      <code><![CDATA[$this->parametersRule !== null]]></code>
      <code><![CDATA[$this->parametersRule !== null]]></code>
      <code><![CDATA[$this->stub]]></code>
      <code><![CDATA[$this->stub !== null]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Framework/MockObject/MockBuilder.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->type]]></code>
      <code><![CDATA[$this->type]]></code>
      <code><![CDATA[$this->type]]></code>
      <code><![CDATA[$this->type]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod>
      <code><![CDATA[setMethods]]></code>
    </DeprecatedMethod>
    <InvalidReturnStatement>
      <code><![CDATA[$object]]></code>
      <code><![CDATA[$object]]></code>
      <code><![CDATA[$object]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[MockObject&MockedType]]></code>
      <code><![CDATA[MockObject&MockedType]]></code>
      <code><![CDATA[MockObject&MockedType]]></code>
    </InvalidReturnType>
    <PossiblyInvalidPropertyAssignmentValue>
      <code><![CDATA[$type]]></code>
    </PossiblyInvalidPropertyAssignmentValue>
  </file>
  <file src="src/Framework/MockObject/MockClass.php">
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->mockName]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[class-string]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Framework/MockObject/MockMethod.php">
    <PossiblyFalseOperand>
      <code><![CDATA[strpos($parameterAsString, '<optional> ')]]></code>
    </PossiblyFalseOperand>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(string) explode(
                ' = ',
                substr(
                    substr(
                        $parameterAsString,
                        strpos($parameterAsString, '<optional> ') + strlen('<optional> '),
                    ),
                    0,
                    -2,
                ),
            )[1]]]></code>
      <code><![CDATA[(string) var_export($defaultValue, true)]]></code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Framework/MockObject/MockObject.php">
    <MissingParamType>
      <code><![CDATA[$originalObject]]></code>
    </MissingParamType>
  </file>
  <file src="src/Framework/MockObject/MockTrait.php">
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->mockName]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[class-string]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Framework/MockObject/Rule/InvocationOrder.php">
    <MissingReturnType>
      <code><![CDATA[invoked]]></code>
      <code><![CDATA[invokedDo]]></code>
    </MissingReturnType>
  </file>
  <file src="src/Framework/MockObject/Rule/Parameters.php">
    <DocblockTypeContradiction>
      <code><![CDATA[$this->invocation === null]]></code>
    </DocblockTypeContradiction>
    <PossiblyNullPropertyAssignmentValue>
      <code><![CDATA[null]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <PropertyNotSetInConstructor>
      <code><![CDATA[$invocation]]></code>
      <code><![CDATA[$parameterVerificationResult]]></code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(bool) $this->parameterVerificationResult]]></code>
    </RedundantCastGivenDocblockType>
    <RedundantPropertyInitializationCheck>
      <code><![CDATA[isset($this->parameterVerificationResult)]]></code>
    </RedundantPropertyInitializationCheck>
  </file>
  <file src="src/Framework/MockObject/Stub/ConsecutiveCalls.php">
    <MissingReturnType>
      <code><![CDATA[invoke]]></code>
    </MissingReturnType>
  </file>
  <file src="src/Framework/MockObject/Stub/ReturnArgument.php">
    <MissingParamType>
      <code><![CDATA[$argumentIndex]]></code>
    </MissingParamType>
    <MissingReturnType>
      <code><![CDATA[invoke]]></code>
    </MissingReturnType>
  </file>
  <file src="src/Framework/MockObject/Stub/ReturnCallback.php">
    <MissingParamType>
      <code><![CDATA[$callback]]></code>
    </MissingParamType>
    <MissingPropertyType>
      <code><![CDATA[$callback]]></code>
    </MissingPropertyType>
    <MissingReturnType>
      <code><![CDATA[invoke]]></code>
    </MissingReturnType>
  </file>
  <file src="src/Framework/MockObject/Stub/ReturnReference.php">
    <MissingParamType>
      <code><![CDATA[$reference]]></code>
    </MissingParamType>
    <MissingReturnType>
      <code><![CDATA[invoke]]></code>
    </MissingReturnType>
  </file>
  <file src="src/Framework/MockObject/Stub/ReturnSelf.php">
    <MissingReturnType>
      <code><![CDATA[invoke]]></code>
    </MissingReturnType>
  </file>
  <file src="src/Framework/MockObject/Stub/ReturnStub.php">
    <MissingParamType>
      <code><![CDATA[$value]]></code>
    </MissingParamType>
    <MissingReturnType>
      <code><![CDATA[invoke]]></code>
    </MissingReturnType>
  </file>
  <file src="src/Framework/MockObject/Stub/ReturnValueMap.php">
    <MissingReturnType>
      <code><![CDATA[invoke]]></code>
    </MissingReturnType>
  </file>
  <file src="src/Framework/MockObject/Stub/Stub.php">
    <MissingReturnType>
      <code><![CDATA[invoke]]></code>
    </MissingReturnType>
  </file>
  <file src="src/Framework/TestBuilder.php">
    <MissingParamType>
      <code><![CDATA[$data]]></code>
    </MissingParamType>
    <MissingReturnType>
      <code><![CDATA[buildTestWithoutData]]></code>
    </MissingReturnType>
    <MissingThrowsDocblock>
      <code><![CDATA[Filter::getFilteredStacktrace($t)]]></code>
      <code><![CDATA[Filter::getFilteredStacktrace($t)]]></code>
      <code><![CDATA[new DataProviderTestSuite(
            $className . '::' . $methodName,
        )]]></code>
      <code><![CDATA[throw new Exception('No valid test provided.');]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/Framework/TestCase.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->expectedException]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedClass>
      <code><![CDATA[InvokedAtIndexMatcher]]></code>
      <code><![CDATA[new InvokedAtIndexMatcher($index)]]></code>
    </DeprecatedClass>
    <DeprecatedMethod>
      <code><![CDATA[setMethods]]></code>
    </DeprecatedMethod>
    <DeprecatedProperty>
      <code><![CDATA[$this->backupGlobalsBlacklist]]></code>
      <code><![CDATA[$this->backupGlobalsBlacklist]]></code>
      <code><![CDATA[$this->backupStaticAttributesBlacklist]]></code>
      <code><![CDATA[$this->backupStaticAttributesBlacklist]]></code>
    </DeprecatedProperty>
    <DocblockTypeContradiction>
      <code><![CDATA[$this->mockObjectGenerator === null]]></code>
      <code><![CDATA[$this->prophet === null]]></code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code><![CDATA[$header]]></code>
    </InvalidArgument>
    <InvalidReturnStatement>
      <code><![CDATA[$mockObject]]></code>
      <code><![CDATA[get_class($mock)]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[MockObject&RealInstanceType]]></code>
      <code><![CDATA[class-string<MockObject&RealInstanceType>]]></code>
    </InvalidReturnType>
    <MissingParamType>
      <code><![CDATA[$args]]></code>
      <code><![CDATA[$args]]></code>
      <code><![CDATA[$callback]]></code>
      <code><![CDATA[$result]]></code>
      <code><![CDATA[$value]]></code>
    </MissingParamType>
    <MissingReturnType>
      <code><![CDATA[getResult]]></code>
      <code><![CDATA[runTest]]></code>
    </MissingReturnType>
    <MissingThrowsDocblock>
      <code><![CDATA[TestUtil::getMissingRequirements(
            static::class,
            $this->name,
        )]]></code>
      <code><![CDATA[cacheDirectory]]></code>
      <code><![CDATA[endTest]]></code>
      <code><![CDATA[endTest]]></code>
      <code><![CDATA[endTest]]></code>
      <code><![CDATA[generateClassFromWsdl]]></code>
      <code><![CDATA[generateClassFromWsdl]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMock]]></code>
      <code><![CDATA[getMockForAbstractClass]]></code>
      <code><![CDATA[getMockForAbstractClass]]></code>
      <code><![CDATA[getMockForAbstractClass]]></code>
      <code><![CDATA[getMockForAbstractClass]]></code>
      <code><![CDATA[getMockForAbstractClass]]></code>
      <code><![CDATA[getMockForAbstractClass]]></code>
      <code><![CDATA[getMockForAbstractClass]]></code>
      <code><![CDATA[getMockForAbstractClass]]></code>
      <code><![CDATA[getMockForAbstractClass]]></code>
      <code><![CDATA[getMockForAbstractClass]]></code>
      <code><![CDATA[getMockForAbstractClass]]></code>
      <code><![CDATA[getMockForTrait]]></code>
      <code><![CDATA[getMockForTrait]]></code>
      <code><![CDATA[getMockForTrait]]></code>
      <code><![CDATA[getMockForTrait]]></code>
      <code><![CDATA[getMockForTrait]]></code>
      <code><![CDATA[getMockForTrait]]></code>
      <code><![CDATA[getMockForTrait]]></code>
      <code><![CDATA[getMockForTrait]]></code>
      <code><![CDATA[getMockForTrait]]></code>
      <code><![CDATA[getMockForTrait]]></code>
      <code><![CDATA[getMockForTrait]]></code>
      <code><![CDATA[getMockForTrait]]></code>
      <code><![CDATA[getObjectForTrait]]></code>
      <code><![CDATA[getObjectForTrait]]></code>
      <code><![CDATA[getObjectForTrait]]></code>
      <code><![CDATA[new Differ($header)]]></code>
      <code><![CDATA[new Template(
                    __DIR__ . '/../Util/PHP/Template/TestCaseClass.tpl',
                )]]></code>
      <code><![CDATA[new Template(
                    __DIR__ . '/../Util/PHP/Template/TestCaseMethod.tpl',
                )]]></code>
      <code><![CDATA[throw new Exception(
                    $e->getMessage(),
                    $e->getCode(),
                    $e,
                );]]></code>
      <code><![CDATA[throw new Exception(
                $e->getMessage(),
                $e->getCode(),
                $e,
            );]]></code>
      <code><![CDATA[throw new Exception('This test uses TestCase::prophesize(), but phpspec/prophecy is not installed. Please run "composer require --dev phpspec/prophecy".');]]></code>
    </MissingThrowsDocblock>
    <PossiblyNullPropertyAssignmentValue>
      <code><![CDATA[$beStrictAboutChangesToGlobalState]]></code>
      <code><![CDATA[null]]></code>
      <code><![CDATA[null]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <PropertyNotSetInConstructor>
      <code><![CDATA[$mockObjectGenerator]]></code>
      <code><![CDATA[$outputBufferingLevel]]></code>
      <code><![CDATA[$prophet]]></code>
      <code><![CDATA[$result]]></code>
    </PropertyNotSetInConstructor>
    <RedundantCondition>
      <code><![CDATA[$this instanceof PhptTestCase]]></code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->prophet !== null]]></code>
    </RedundantConditionGivenDocblockType>
    <UndefinedClass>
      <code><![CDATA[$e]]></code>
      <code><![CDATA[ObjectProphecy]]></code>
      <code><![CDATA[PredictionException]]></code>
      <code><![CDATA[PredictionException]]></code>
      <code><![CDATA[Prophet]]></code>
      <code><![CDATA[Prophet]]></code>
    </UndefinedClass>
    <UndefinedDocblockClass>
      <code><![CDATA[$this->prophet]]></code>
      <code><![CDATA[$this->prophet]]></code>
      <code><![CDATA[ClassNotFoundException]]></code>
      <code><![CDATA[DoubleException]]></code>
      <code><![CDATA[InterfaceNotFoundException]]></code>
      <code><![CDATA[Prophet]]></code>
    </UndefinedDocblockClass>
  </file>
  <file src="src/Framework/TestResult.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$test]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedInterface>
      <code><![CDATA[TestListener]]></code>
      <code><![CDATA[TestListener]]></code>
      <code><![CDATA[TestListener[]]]></code>
      <code><![CDATA[private $listeners = [];]]></code>
    </DeprecatedInterface>
    <DeprecatedProperty>
      <code><![CDATA[$this->listeners]]></code>
      <code><![CDATA[$this->listeners]]></code>
      <code><![CDATA[$this->listeners]]></code>
      <code><![CDATA[$this->listeners]]></code>
      <code><![CDATA[$this->listeners]]></code>
      <code><![CDATA[$this->listeners]]></code>
      <code><![CDATA[$this->listeners]]></code>
      <code><![CDATA[$this->listeners]]></code>
      <code><![CDATA[$this->listeners]]></code>
      <code><![CDATA[$this->listeners]]></code>
      <code><![CDATA[$this->listeners]]></code>
    </DeprecatedProperty>
    <InvalidArgument>
      <code><![CDATA[[$test, 'runBare']]]></code>
    </InvalidArgument>
    <MissingConstructor>
      <code><![CDATA[$codeCoverage]]></code>
    </MissingConstructor>
    <MissingThrowsDocblock>
      <code><![CDATA[stop]]></code>
      <code><![CDATA[throw new Exception(
                        $e->getMessage(),
                        $e->getCode(),
                        $e,
                    );]]></code>
      <code><![CDATA[throw new Exception(
                    $e->getMessage(),
                    $e->getCode(),
                    $e,
                );]]></code>
    </MissingThrowsDocblock>
    <PossiblyInvalidArgument>
      <code><![CDATA[$linesToBeCovered]]></code>
    </PossiblyInvalidArgument>
    <PossiblyUndefinedVariable>
      <code><![CDATA[$_timeout]]></code>
      <code><![CDATA[$e]]></code>
      <code><![CDATA[$e]]></code>
      <code><![CDATA[$e]]></code>
      <code><![CDATA[$isAnyCoverageRequired]]></code>
    </PossiblyUndefinedVariable>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->codeCoverage !== null]]></code>
      <code><![CDATA[$this->codeCoverage !== null]]></code>
    </RedundantConditionGivenDocblockType>
    <UndefinedInterfaceMethod>
      <code><![CDATA[addToAssertionCount]]></code>
      <code><![CDATA[addToAssertionCount]]></code>
      <code><![CDATA[doesNotPerformAssertions]]></code>
      <code><![CDATA[doesNotPerformAssertions]]></code>
      <code><![CDATA[doesNotPerformAssertions]]></code>
      <code><![CDATA[getActualOutput]]></code>
      <code><![CDATA[getName]]></code>
      <code><![CDATA[getName]]></code>
      <code><![CDATA[getNumAssertions]]></code>
      <code><![CDATA[getNumAssertions]]></code>
      <code><![CDATA[getNumAssertions]]></code>
      <code><![CDATA[getNumAssertions]]></code>
      <code><![CDATA[hasOutput]]></code>
      <code><![CDATA[runBare]]></code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Framework/TestSuite.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$className]]></code>
      <code><![CDATA[$className]]></code>
      <code><![CDATA[TestUtil::getDependencies($class->getName(), $methodName)]]></code>
      <code><![CDATA[TestUtil::getDependencies($class->getName(), $methodName)]]></code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction>
      <code><![CDATA[!is_string($theClass) && !$theClass instanceof ReflectionClass]]></code>
      <code><![CDATA[is_string($testClass)]]></code>
      <code><![CDATA[null === $this->backupGlobals]]></code>
      <code><![CDATA[null === $this->backupStaticAttributes]]></code>
      <code><![CDATA[null === $this->beStrictAboutChangesToGlobalState]]></code>
    </DocblockTypeContradiction>
    <MissingThrowsDocblock>
      <code><![CDATA[FileLoader::checkAndLoad($filename)]]></code>
      <code><![CDATA[new PhptTestCase($filename)]]></code>
      <code><![CDATA[throw new Exception(
                $e->getMessage(),
                $e->getCode(),
                $e,
            );]]></code>
    </MissingThrowsDocblock>
    <PropertyNotSetInConstructor>
      <code><![CDATA[$backupGlobals]]></code>
      <code><![CDATA[$backupStaticAttributes]]></code>
      <code><![CDATA[$beStrictAboutChangesToGlobalState]]></code>
      <code><![CDATA[$iteratorFilter]]></code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(string) $key]]></code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->iteratorFilter !== null]]></code>
      <code><![CDATA[is_bool($backupGlobals)]]></code>
      <code><![CDATA[is_bool($backupStaticAttributes)]]></code>
      <code><![CDATA[is_bool($beStrictAboutChangesToGlobalState)]]></code>
      <code><![CDATA[null === $this->backupGlobals && is_bool($backupGlobals)]]></code>
      <code><![CDATA[null === $this->backupStaticAttributes && is_bool($backupStaticAttributes)]]></code>
      <code><![CDATA[null === $this->beStrictAboutChangesToGlobalState && is_bool($beStrictAboutChangesToGlobalState)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Runner/BaseTestRunner.php">
    <DeprecatedClass>
      <code><![CDATA[new StandardTestSuiteLoader]]></code>
    </DeprecatedClass>
    <DeprecatedInterface>
      <code><![CDATA[TestSuiteLoader]]></code>
    </DeprecatedInterface>
  </file>
  <file src="src/Runner/Extension/ExtensionHandler.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$extensionConfiguration->arguments()]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedInterface>
      <code><![CDATA[TestListener]]></code>
    </DeprecatedInterface>
  </file>
  <file src="src/Runner/Filter/GroupFilterIterator.php">
    <MissingReturnType>
      <code><![CDATA[doAccept]]></code>
    </MissingReturnType>
    <MissingTemplateParam>
      <code><![CDATA[GroupFilterIterator]]></code>
    </MissingTemplateParam>
  </file>
  <file src="src/Runner/Filter/NameFilterIterator.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->filter]]></code>
    </ArgumentTypeCoercion>
    <MissingTemplateParam>
      <code><![CDATA[NameFilterIterator]]></code>
    </MissingTemplateParam>
    <PropertyNotSetInConstructor>
      <code><![CDATA[$filterMax]]></code>
      <code><![CDATA[$filterMin]]></code>
    </PropertyNotSetInConstructor>
    <RedundantPropertyInitializationCheck>
      <code><![CDATA[$accepted && isset($this->filterMax)]]></code>
    </RedundantPropertyInitializationCheck>
  </file>
  <file src="src/Runner/Hook/TestListenerAdapter.php">
    <DeprecatedInterface>
      <code><![CDATA[TestListenerAdapter]]></code>
    </DeprecatedInterface>
    <MissingConstructor>
      <code><![CDATA[$lastTestWasNotSuccessful]]></code>
    </MissingConstructor>
  </file>
  <file src="src/Runner/PhptTestCase.php">
    <InternalClass>
      <code><![CDATA[RawCodeCoverageData::fromXdebugWithoutPathCoverage([])]]></code>
      <code><![CDATA[RawCodeCoverageData::fromXdebugWithoutPathCoverage([])]]></code>
    </InternalClass>
    <InternalMethod>
      <code><![CDATA[RawCodeCoverageData::fromXdebugWithoutPathCoverage([])]]></code>
      <code><![CDATA[RawCodeCoverageData::fromXdebugWithoutPathCoverage([])]]></code>
    </InternalMethod>
    <MissingThrowsDocblock>
      <code><![CDATA[cacheDirectory]]></code>
      <code><![CDATA[new Template(
            __DIR__ . '/../Util/PHP/Template/PhptTestCase.tpl',
        )]]></code>
      <code><![CDATA[stop]]></code>
    </MissingThrowsDocblock>
    <PossiblyInvalidArgument>
      <code><![CDATA[$sections['FILEEOF']]]></code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument>
      <code><![CDATA[$trace[0]['file']]]></code>
      <code><![CDATA[$trace[0]['file']]]></code>
      <code><![CDATA[$trace[0]['line']]]></code>
      <code><![CDATA[$trace[0]['line']]]></code>
    </PossiblyNullArgument>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$setting[1]]]></code>
    </PossiblyUndefinedArrayOffset>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$sectionName]]></code>
      <code><![CDATA[$sectionName]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Runner/StandardTestSuiteLoader.php">
    <DeprecatedInterface>
      <code><![CDATA[StandardTestSuiteLoader]]></code>
    </DeprecatedInterface>
    <MissingThrowsDocblock>
      <code><![CDATA[FileLoader::checkAndLoad($suiteClassFile)]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/Runner/TestSuiteSorter.php">
    <MissingClosureParamType>
      <code><![CDATA[$left]]></code>
      <code><![CDATA[$left]]></code>
      <code><![CDATA[$left]]></code>
      <code><![CDATA[$right]]></code>
      <code><![CDATA[$right]]></code>
      <code><![CDATA[$right]]></code>
    </MissingClosureParamType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$order === self::ORDER_DURATION && $this->cache !== null]]></code>
      <code><![CDATA[$orderDefects === self::ORDER_DEFECTS_FIRST && $this->cache !== null]]></code>
      <code><![CDATA[$this->cache !== null]]></code>
      <code><![CDATA[$this->cache !== null]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Runner/Version.php">
    <LessSpecificReturnStatement>
      <code><![CDATA[implode('.', array_slice(explode('.', $version), 0, 2))]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[non-empty-string]]></code>
    </MoreSpecificReturnType>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[strpos(self::id(), '-')]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/TextUI/CliArguments/Builder.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$parameters]]></code>
      <code><![CDATA[array_merge(self::LONG_OPTIONS, $additionalLongOptions)]]></code>
    </ArgumentTypeCoercion>
    <InvalidArgument>
      <code><![CDATA[$unrecognizedOptions]]></code>
    </InvalidArgument>
    <MissingThrowsDocblock>
      <code><![CDATA[throw new Exception(
                $e->getMessage(),
                $e->getCode(),
                $e,
            );]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/TextUI/CliArguments/Configuration.php">
    <MissingReturnType>
      <code><![CDATA[columns]]></code>
    </MissingReturnType>
  </file>
  <file src="src/TextUI/Command.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$printerClass]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedClass>
      <code><![CDATA[StandardTestSuiteLoader::class]]></code>
    </DeprecatedClass>
    <DeprecatedInterface>
      <code><![CDATA[?TestSuiteLoader]]></code>
    </DeprecatedInterface>
    <DeprecatedMethod>
      <code><![CDATA[handleLoader]]></code>
      <code><![CDATA[handleLoader]]></code>
      <code><![CDATA[hasTestSuiteLoaderClass]]></code>
      <code><![CDATA[hasTestSuiteLoaderFile]]></code>
      <code><![CDATA[testSuiteLoaderClass]]></code>
      <code><![CDATA[testSuiteLoaderFile]]></code>
    </DeprecatedMethod>
    <LessSpecificReturnStatement>
      <code><![CDATA[$class->newInstance($outputStream)]]></code>
    </LessSpecificReturnStatement>
    <MissingThrowsDocblock>
      <code><![CDATA[argument]]></code>
      <code><![CDATA[argument]]></code>
      <code><![CDATA[atLeastVersion]]></code>
      <code><![CDATA[bootstrap]]></code>
      <code><![CDATA[cacheDirectory]]></code>
      <code><![CDATA[defaultTestSuite]]></code>
      <code><![CDATA[detect]]></code>
      <code><![CDATA[extensionsDirectory]]></code>
      <code><![CDATA[getTest]]></code>
      <code><![CDATA[handleListSuites]]></code>
      <code><![CDATA[handleListSuites]]></code>
      <code><![CDATA[handleListTests]]></code>
      <code><![CDATA[handleListTestsXml]]></code>
      <code><![CDATA[includePath]]></code>
      <code><![CDATA[iniSettings]]></code>
      <code><![CDATA[mapToLegacyArray]]></code>
      <code><![CDATA[printerClass]]></code>
      <code><![CDATA[stop]]></code>
      <code><![CDATA[testSuiteLoaderClass]]></code>
      <code><![CDATA[throw new ReflectionException(
                    $e->getMessage(),
                    $e->getCode(),
                    $e,
                );]]></code>
      <code><![CDATA[throw new ReflectionException(
                $e->getMessage(),
                $e->getCode(),
                $e,
            );]]></code>
      <code><![CDATA[unrecognizedOrderBy]]></code>
    </MissingThrowsDocblock>
    <MoreSpecificReturnType>
      <code><![CDATA[null|Printer|string]]></code>
    </MoreSpecificReturnType>
    <PossiblyNullArgument>
      <code><![CDATA[$_SERVER['argv']]]></code>
      <code><![CDATA[$suite]]></code>
      <code><![CDATA[$suite]]></code>
      <code><![CDATA[$suite]]></code>
      <code><![CDATA[$suite]]></code>
    </PossiblyNullArgument>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$_SERVER['argv']]]></code>
    </PossiblyUndefinedArrayOffset>
    <RedundantCondition>
      <code><![CDATA[assert(isset($arguments) && $arguments instanceof Configuration)]]></code>
    </RedundantCondition>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$loaderFile]]></code>
      <code><![CDATA[$printerFile]]></code>
    </RiskyTruthyFalsyComparison>
    <UnsafeInstantiation>
      <code><![CDATA[new static]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="src/TextUI/DefaultResultPrinter.php">
    <DeprecatedInterface>
      <code><![CDATA[DefaultResultPrinter]]></code>
    </DeprecatedInterface>
    <MissingThrowsDocblock>
      <code><![CDATA[parent::__construct($out)]]></code>
      <code><![CDATA[stop]]></code>
    </MissingThrowsDocblock>
    <PropertyNotSetInConstructor>
      <code><![CDATA[$maxColumn]]></code>
      <code><![CDATA[$numTestsWidth]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/TextUI/Help.php">
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$option['desc']]]></code>
      <code><![CDATA[$option['desc']]]></code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="src/TextUI/TestRunner.php">
    <DeprecatedClass>
      <code><![CDATA[new StandardTestSuiteLoader]]></code>
      <code><![CDATA[new XdebugFilterScriptGenerator]]></code>
    </DeprecatedClass>
    <DeprecatedInterface>
      <code><![CDATA[?TestSuiteLoader]]></code>
      <code><![CDATA[TestSuiteLoader]]></code>
      <code><![CDATA[TestSuiteLoader]]></code>
    </DeprecatedInterface>
    <DeprecatedMethod>
      <code><![CDATA[addListener]]></code>
      <code><![CDATA[addListener]]></code>
      <code><![CDATA[addListener]]></code>
      <code><![CDATA[addListener]]></code>
      <code><![CDATA[addListener]]></code>
      <code><![CDATA[addListener]]></code>
      <code><![CDATA[addListener]]></code>
      <code><![CDATA[addListener]]></code>
      <code><![CDATA[createTestListenerInstance]]></code>
      <code><![CDATA[flushListeners]]></code>
    </DeprecatedMethod>
    <DocblockTypeContradiction>
      <code><![CDATA[$this->loader === null]]></code>
      <code><![CDATA[$this->printer === null]]></code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code><![CDATA[$e]]></code>
      <code><![CDATA[$e]]></code>
      <code><![CDATA[$e]]></code>
      <code><![CDATA[$e]]></code>
      <code><![CDATA[$e]]></code>
      <code><![CDATA[$e]]></code>
    </InvalidArgument>
    <InvalidStringClass>
      <code><![CDATA[new $class(
            (isset($arguments['stderr']) && $arguments['stderr'] === true) ? 'php://stderr' : null,
            $arguments['verbose'],
            $arguments['colors'],
            $arguments['debug'],
            $arguments['columns'],
            $arguments['reverseList'],
        )]]></code>
    </InvalidStringClass>
    <MissingThrowsDocblock>
      <code><![CDATA[addFilter]]></code>
      <code><![CDATA[addFilter]]></code>
      <code><![CDATA[addFilter]]></code>
      <code><![CDATA[addFilter]]></code>
      <code><![CDATA[addFilter]]></code>
      <code><![CDATA[detect]]></code>
      <code><![CDATA[new Printer($arguments['coverageText'])]]></code>
      <code><![CDATA[reorderTestsInSuite]]></code>
      <code><![CDATA[run]]></code>
      <code><![CDATA[run]]></code>
      <code><![CDATA[run]]></code>
      <code><![CDATA[stop]]></code>
      <code><![CDATA[stop]]></code>
    </MissingThrowsDocblock>
    <PossiblyNullArgument>
      <code><![CDATA[$arguments['enforceTimeLimit']]]></code>
      <code><![CDATA[$cacheLocation]]></code>
    </PossiblyNullArgument>
    <PossiblyNullPropertyAssignmentValue>
      <code><![CDATA[$loader]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$_SERVER['PHP_SELF']]]></code>
      <code><![CDATA[$arguments['enforceTimeLimit']]]></code>
    </PossiblyUndefinedArrayOffset>
    <PropertyNotSetInConstructor>
      <code><![CDATA[$printer]]></code>
    </PropertyNotSetInConstructor>
    <RedundantCondition>
      <code><![CDATA[assert($this->printer instanceof CliTestDoxPrinter)]]></code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->printer !== null]]></code>
    </RedundantConditionGivenDocblockType>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$codeCoverageConfiguration->hasNonEmptyListOfFilesToBeIncludedInCodeCoverageReport()]]></code>
      <code><![CDATA[$codeCoverageConfiguration->includeUncoveredFiles()]]></code>
      <code><![CDATA[$codeCoverageConfiguration->processUncoveredFiles()]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/TextUI/XmlConfiguration/CodeCoverage/Filter/DirectoryCollectionIterator.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[$position]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/TextUI/XmlConfiguration/Filesystem/DirectoryCollectionIterator.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[$position]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/TextUI/XmlConfiguration/Filesystem/FileCollectionIterator.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[$position]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/TextUI/XmlConfiguration/Group/GroupCollectionIterator.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[$position]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/TextUI/XmlConfiguration/Loader.php">
    <DeprecatedMethod>
      <code><![CDATA[legacyCodeCoverage]]></code>
    </DeprecatedMethod>
    <RedundantCast>
      <code><![CDATA[(string) $argument->textContent]]></code>
      <code><![CDATA[(string) $const->getAttribute('name')]]></code>
      <code><![CDATA[(string) $const->getAttribute('value')]]></code>
      <code><![CDATA[(string) $directoryNode->getAttribute('group')]]></code>
      <code><![CDATA[(string) $directoryNode->getAttribute('phpVersion')]]></code>
      <code><![CDATA[(string) $directoryNode->getAttribute('phpVersionOperator')]]></code>
      <code><![CDATA[(string) $directoryNode->getAttribute('prefix')]]></code>
      <code><![CDATA[(string) $directoryNode->getAttribute('prefix')]]></code>
      <code><![CDATA[(string) $directoryNode->getAttribute('suffix')]]></code>
      <code><![CDATA[(string) $directoryNode->getAttribute('suffix')]]></code>
      <code><![CDATA[(string) $directoryNode->textContent]]></code>
      <code><![CDATA[(string) $directoryNode->textContent]]></code>
      <code><![CDATA[(string) $document->documentElement->getAttribute('columns')]]></code>
      <code><![CDATA[(string) $element->getAttribute($attribute)]]></code>
      <code><![CDATA[(string) $element->getAttribute($attribute)]]></code>
      <code><![CDATA[(string) $element->getAttribute($attribute)]]></code>
      <code><![CDATA[(string) $element->getAttribute('addUncoveredFilesFromWhitelist')]]></code>
      <code><![CDATA[(string) $element->getAttribute('class')]]></code>
      <code><![CDATA[(string) $element->getAttribute('file')]]></code>
      <code><![CDATA[(string) $element->getAttribute('name')]]></code>
      <code><![CDATA[(string) $element->getAttribute('processUncoveredFilesFromWhitelist')]]></code>
      <code><![CDATA[(string) $excludeNode->textContent]]></code>
      <code><![CDATA[(string) $file->textContent]]></code>
      <code><![CDATA[(string) $fileNode->getAttribute('phpVersion')]]></code>
      <code><![CDATA[(string) $fileNode->getAttribute('phpVersionOperator')]]></code>
      <code><![CDATA[(string) $fileNode->textContent]]></code>
      <code><![CDATA[(string) $group->textContent]]></code>
      <code><![CDATA[(string) $group->textContent]]></code>
      <code><![CDATA[(string) $includePath->textContent]]></code>
      <code><![CDATA[(string) $ini->getAttribute('name')]]></code>
      <code><![CDATA[(string) $ini->getAttribute('value')]]></code>
      <code><![CDATA[(string) $log->getAttribute('target')]]></code>
      <code><![CDATA[(string) $log->getAttribute('target')]]></code>
      <code><![CDATA[(string) $log->getAttribute('type')]]></code>
      <code><![CDATA[(string) $log->getAttribute('type')]]></code>
      <code><![CDATA[(string) $var->getAttribute('name')]]></code>
      <code><![CDATA[(string) $var->getAttribute('value')]]></code>
    </RedundantCast>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[assert($directoryNode instanceof DOMElement)]]></code>
      <code><![CDATA[assert($fileNode instanceof DOMElement)]]></code>
    </RedundantConditionGivenDocblockType>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[!$verbatim]]></code>
      <code><![CDATA[$includePathFile]]></code>
      <code><![CDATA[$this->getBoolean($document->documentElement->getAttribute('colors'), false)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/TextUI/XmlConfiguration/Logging/Logging.php">
    <MissingThrowsDocblock>
      <code><![CDATA[throw new Exception('Logger "JUnit XML" is not configured');]]></code>
      <code><![CDATA[throw new Exception('Logger "Team City" is not configured');]]></code>
      <code><![CDATA[throw new Exception('Logger "TestDox HTML" is not configured');]]></code>
      <code><![CDATA[throw new Exception('Logger "TestDox Text" is not configured');]]></code>
      <code><![CDATA[throw new Exception('Logger "TestDox XML" is not configured');]]></code>
      <code><![CDATA[throw new Exception('Logger "Text" is not configured');]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/TextUI/XmlConfiguration/Migration/Migrations/LogToReportMigration.php">
    <PossiblyNullReference>
      <code><![CDATA[removeChild]]></code>
    </PossiblyNullReference>
  </file>
  <file src="src/TextUI/XmlConfiguration/Migration/Migrations/RemoveEmptyFilter.php">
    <PossiblyNullReference>
      <code><![CDATA[removeChild]]></code>
      <code><![CDATA[removeChild]]></code>
    </PossiblyNullReference>
  </file>
  <file src="src/TextUI/XmlConfiguration/PHP/Constant.php">
    <MissingParamType>
      <code><![CDATA[$value]]></code>
    </MissingParamType>
    <MissingReturnType>
      <code><![CDATA[value]]></code>
    </MissingReturnType>
  </file>
  <file src="src/TextUI/XmlConfiguration/PHP/ConstantCollectionIterator.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[$position]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/TextUI/XmlConfiguration/PHP/IniSettingCollectionIterator.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[$position]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/TextUI/XmlConfiguration/PHP/Variable.php">
    <MissingParamType>
      <code><![CDATA[$value]]></code>
    </MissingParamType>
    <MissingReturnType>
      <code><![CDATA[value]]></code>
    </MissingReturnType>
  </file>
  <file src="src/TextUI/XmlConfiguration/PHP/VariableCollectionIterator.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[$position]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/TextUI/XmlConfiguration/PHPUnit/ExtensionCollectionIterator.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[$position]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/TextUI/XmlConfiguration/PHPUnit/PHPUnit.php">
    <DeprecatedMethod>
      <code><![CDATA[hasTestSuiteLoaderClass]]></code>
      <code><![CDATA[hasTestSuiteLoaderFile]]></code>
    </DeprecatedMethod>
    <DeprecatedProperty>
      <code><![CDATA[$this->testSuiteLoaderClass]]></code>
      <code><![CDATA[$this->testSuiteLoaderClass]]></code>
      <code><![CDATA[$this->testSuiteLoaderClass]]></code>
      <code><![CDATA[$this->testSuiteLoaderFile]]></code>
      <code><![CDATA[$this->testSuiteLoaderFile]]></code>
      <code><![CDATA[$this->testSuiteLoaderFile]]></code>
    </DeprecatedProperty>
    <MissingParamType>
      <code><![CDATA[$columns]]></code>
    </MissingParamType>
    <MissingReturnType>
      <code><![CDATA[columns]]></code>
    </MissingReturnType>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(string) $this->bootstrap]]></code>
      <code><![CDATA[(string) $this->cacheResultFile]]></code>
      <code><![CDATA[(string) $this->defaultTestSuite]]></code>
      <code><![CDATA[(string) $this->extensionsDirectory]]></code>
      <code><![CDATA[(string) $this->printerClass]]></code>
      <code><![CDATA[(string) $this->printerFile]]></code>
      <code><![CDATA[(string) $this->testSuiteLoaderClass]]></code>
      <code><![CDATA[(string) $this->testSuiteLoaderFile]]></code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/TextUI/XmlConfiguration/TestSuite/TestDirectoryCollectionIterator.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[$position]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/TextUI/XmlConfiguration/TestSuite/TestFileCollectionIterator.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[$position]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/TextUI/XmlConfiguration/TestSuite/TestSuiteCollectionIterator.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[$position]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Util/Annotation/DocBlock.php">
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[array_merge(
            $requires,
            ['__OFFSET' => $recordedOffsets],
            array_filter([
                'setting'            => $recordedSettings,
                'extension_versions' => $extensionVersions,
            ]),
        )]]></code>
    </InvalidPropertyAssignmentValue>
    <InvalidReturnStatement>
      <code><![CDATA[$this->parsedRequirements = array_merge(
            $requires,
            ['__OFFSET' => $recordedOffsets],
            array_filter([
                'setting'            => $recordedSettings,
                'extension_versions' => $extensionVersions,
            ]),
        )]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[array{
     *   __OFFSET: array<string, int>&array{__FILE: string},
     *   setting?: array<string, string>,
     *   extension_versions?: array<string, array{version: string, operator: string}>
     * }&array<
     *   string,
     *   string|array{version: string, operator: string}|array{constraint: string}|array<int|string, string>
     * >]]></code>
    </InvalidReturnType>
    <MissingThrowsDocblock>
      <code><![CDATA[throw new SkippedTestError;]]></code>
    </MissingThrowsDocblock>
    <RedundantCast>
      <code><![CDATA[(string) $matches['value'][$i]]]></code>
    </RedundantCast>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[!preg_match_all(self::REGEX_DATA_PROVIDER, $docComment, $matches)]]></code>
      <code><![CDATA[preg_match_all('/@(?P<name>[A-Za-z_-]+)(?:[ \t]+(?P<value>.*?))?[ \t]*\r?$/m', $docBlock, $matches)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Util/ErrorHandler.php">
    <InvalidArgument>
      <code><![CDATA[static function ($errorNumber, $errorString)
            {
                if ($errorNumber === E_WARNING) {
                    return;
                }

                return false;
            }]]></code>
    </InvalidArgument>
    <MissingReturnType>
      <code><![CDATA[invokeIgnoringWarnings]]></code>
    </MissingReturnType>
  </file>
  <file src="src/Util/ExcludeList.php">
    <MissingThrowsDocblock>
      <code><![CDATA[throw new Exception(
                sprintf(
                    '"%s" is not a directory',
                    $directory,
                ),
            );]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/Util/FileLoader.php">
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[!$includePathFilename]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Util/Filter.php">
    <MissingParamType>
      <code><![CDATA[$prefix]]></code>
    </MissingParamType>
  </file>
  <file src="src/Util/GlobalState.php">
    <MissingParamType>
      <code><![CDATA[$variable]]></code>
    </MissingParamType>
  </file>
  <file src="src/Util/Json.php">
    <MissingParamType>
      <code><![CDATA[$json]]></code>
    </MissingParamType>
  </file>
  <file src="src/Util/Log/JUnit.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$suite->getName()]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedInterface>
      <code><![CDATA[JUnit]]></code>
    </DeprecatedInterface>
    <DocblockTypeContradiction>
      <code><![CDATA[$this->currentTestCase === null]]></code>
      <code><![CDATA[$this->currentTestCase === null]]></code>
    </DocblockTypeContradiction>
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[$this->testSuiteTimes]]></code>
    </InvalidPropertyAssignmentValue>
    <MissingThrowsDocblock>
      <code><![CDATA[Filter::getFilteredStacktrace($t)]]></code>
      <code><![CDATA[parent::__construct($out)]]></code>
      <code><![CDATA[throw new Exception(
                    $e->getMessage(),
                    $e->getCode(),
                    $e,
                );]]></code>
      <code><![CDATA[throw new Exception(
                $e->getMessage(),
                $e->getCode(),
                $e,
            );]]></code>
    </MissingThrowsDocblock>
    <PossiblyNullPropertyAssignmentValue>
      <code><![CDATA[null]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <PropertyNotSetInConstructor>
      <code><![CDATA[$currentTestCase]]></code>
    </PropertyNotSetInConstructor>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[empty($testOutput)]]></code>
    </RiskyTruthyFalsyComparison>
    <UndefinedInterfaceMethod>
      <code><![CDATA[getName]]></code>
      <code><![CDATA[getName]]></code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Util/Log/TeamCity.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$className]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedInterface>
      <code><![CDATA[TeamCity]]></code>
    </DeprecatedInterface>
    <DocblockTypeContradiction>
      <code><![CDATA[$actualString === null]]></code>
      <code><![CDATA[$expectedString === null]]></code>
    </DocblockTypeContradiction>
    <MissingParamType>
      <code><![CDATA[$value]]></code>
    </MissingParamType>
    <MissingThrowsDocblock>
      <code><![CDATA[Filter::getFilteredStacktrace($t)]]></code>
      <code><![CDATA[throw new Exception(
                $e->getMessage(),
                $e->getCode(),
                $e,
            );]]></code>
    </MissingThrowsDocblock>
    <PropertyNotSetInConstructor>
      <code><![CDATA[$flowId]]></code>
      <code><![CDATA[$startedTestName]]></code>
      <code><![CDATA[TeamCity]]></code>
      <code><![CDATA[TeamCity]]></code>
    </PropertyNotSetInConstructor>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$this->flowId]]></code>
    </RiskyTruthyFalsyComparison>
    <UndefinedInterfaceMethod>
      <code><![CDATA[getName]]></code>
      <code><![CDATA[getName]]></code>
      <code><![CDATA[getName]]></code>
      <code><![CDATA[getName]]></code>
      <code><![CDATA[getName]]></code>
      <code><![CDATA[getName]]></code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Util/PHP/AbstractPhpProcess.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->getException($failures[0])]]></code>
      <code><![CDATA[$this->getException($warnings[0])]]></code>
    </ArgumentTypeCoercion>
    <LessSpecificReturnStatement>
      <code><![CDATA[$exception]]></code>
    </LessSpecificReturnStatement>
    <MissingClosureParamType>
      <code><![CDATA[$errfile]]></code>
      <code><![CDATA[$errline]]></code>
      <code><![CDATA[$errno]]></code>
      <code><![CDATA[$errstr]]></code>
    </MissingClosureParamType>
    <MoreSpecificReturnType>
      <code><![CDATA[Exception]]></code>
    </MoreSpecificReturnType>
    <PossiblyFalseOperand>
      <code><![CDATA[strrpos($key, "\0")]]></code>
    </PossiblyFalseOperand>
    <PossiblyNullArgument>
      <code><![CDATA[$childResult->getCodeCoverage()]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code><![CDATA[merge]]></code>
    </PossiblyNullReference>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[!$file]]></code>
      <code><![CDATA[!$file]]></code>
      <code><![CDATA[$file]]></code>
    </RiskyTruthyFalsyComparison>
    <UndefinedInterfaceMethod>
      <code><![CDATA[addToAssertionCount]]></code>
      <code><![CDATA[setResult]]></code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Util/PHP/DefaultPhpProcess.php">
    <DocblockTypeContradiction>
      <code><![CDATA[is_array($envVar)]]></code>
    </DocblockTypeContradiction>
    <PropertyNotSetInConstructor>
      <code><![CDATA[$tempFile]]></code>
    </PropertyNotSetInConstructor>
    <RedundantCondition>
      <code><![CDATA[$_SERVER]]></code>
    </RedundantCondition>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[!($this->tempFile = tempnam(sys_get_temp_dir(), 'PHPUnit'))]]></code>
    </RiskyTruthyFalsyComparison>
    <TypeDoesNotContainNull>
      <code><![CDATA[[]]]></code>
    </TypeDoesNotContainNull>
  </file>
  <file src="src/Util/PHP/WindowsPhpProcess.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[WindowsPhpProcess]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Util/Printer.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[$stream]]></code>
    </PropertyNotSetInConstructor>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$this->stream]]></code>
      <code><![CDATA[$this->stream]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Util/Reflection.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$filter]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Util/RegularExpression.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$pattern]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Util/Test.php">
    <MissingReturnType>
      <code><![CDATA[sanitizeVersionNumber]]></code>
    </MissingReturnType>
    <MissingThrowsDocblock>
      <code><![CDATA[forClassName]]></code>
      <code><![CDATA[forMethod]]></code>
      <code><![CDATA[forMethod]]></code>
      <code><![CDATA[getName]]></code>
      <code><![CDATA[requirements]]></code>
      <code><![CDATA[requirements]]></code>
    </MissingThrowsDocblock>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$classShortcut]]></code>
      <code><![CDATA[$hint]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Util/TestDox/CliTestDoxPrinter.php">
    <DeprecatedInterface>
      <code><![CDATA[CliTestDoxPrinter]]></code>
    </DeprecatedInterface>
    <InvalidArrayOffset>
      <code><![CDATA[self::SPINNER_ICONS[$id]]]></code>
      <code><![CDATA[self::SPINNER_ICONS[$id]]]></code>
    </InvalidArrayOffset>
    <MissingThrowsDocblock>
      <code><![CDATA[Filter::getFilteredStacktrace($t)]]></code>
      <code><![CDATA[stop]]></code>
    </MissingThrowsDocblock>
    <PossiblyInvalidArrayOffset>
      <code><![CDATA[$prefix['default']]]></code>
      <code><![CDATA[$prefix['diff']]]></code>
      <code><![CDATA[$prefix['last']]]></code>
      <code><![CDATA[$prefix['message']]]></code>
      <code><![CDATA[$prefix['start']]]></code>
      <code><![CDATA[$prefix['trace']]]></code>
    </PossiblyInvalidArrayOffset>
    <PossiblyNullArgument>
      <code><![CDATA[$style]]></code>
    </PossiblyNullArgument>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[self::STATUS_STYLES[$result['status']]['message']]]></code>
    </PossiblyUndefinedArrayOffset>
    <PropertyNotSetInConstructor>
      <code><![CDATA[CliTestDoxPrinter]]></code>
      <code><![CDATA[CliTestDoxPrinter]]></code>
    </PropertyNotSetInConstructor>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$diff]]></code>
      <code><![CDATA[$diff]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Util/TestDox/HtmlResultPrinter.php">
    <DeprecatedInterface>
      <code><![CDATA[HtmlResultPrinter]]></code>
    </DeprecatedInterface>
    <PossiblyNullArgument>
      <code><![CDATA[$this->currentTestClassPrettified]]></code>
    </PossiblyNullArgument>
    <PropertyNotSetInConstructor>
      <code><![CDATA[HtmlResultPrinter]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Util/TestDox/NamePrettifier.php">
    <InvalidCast>
      <code><![CDATA[$value]]></code>
    </InvalidCast>
    <MissingThrowsDocblock>
      <code><![CDATA[throw new UtilException(
                $e->getMessage(),
                $e->getCode(),
                $e,
            );]]></code>
    </MissingThrowsDocblock>
    <PossiblyInvalidArgument>
      <code><![CDATA[preg_replace($variables, $providedData, $annotation)]]></code>
    </PossiblyInvalidArgument>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_string($value)]]></code>
    </RedundantConditionGivenDocblockType>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[empty($className)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Util/TestDox/ResultPrinter.php">
    <DeprecatedInterface>
      <code><![CDATA[ResultPrinter]]></code>
    </DeprecatedInterface>
    <MissingThrowsDocblock>
      <code><![CDATA[parent::__construct($out)]]></code>
    </MissingThrowsDocblock>
    <PropertyNotSetInConstructor>
      <code><![CDATA[$testStatus]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Util/TestDox/TestDoxPrinter.php">
    <DeprecatedInterface>
      <code><![CDATA[TestDoxPrinter]]></code>
    </DeprecatedInterface>
    <MissingThrowsDocblock>
      <code><![CDATA[Filter::getFilteredStacktrace($t)]]></code>
    </MissingThrowsDocblock>
    <PropertyNotSetInConstructor>
      <code><![CDATA[TestDoxPrinter]]></code>
      <code><![CDATA[TestDoxPrinter]]></code>
    </PropertyNotSetInConstructor>
    <UndefinedInterfaceMethod>
      <code><![CDATA[getName]]></code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Util/TestDox/TextResultPrinter.php">
    <DeprecatedInterface>
      <code><![CDATA[TextResultPrinter]]></code>
    </DeprecatedInterface>
    <PropertyNotSetInConstructor>
      <code><![CDATA[TextResultPrinter]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Util/TestDox/XmlResultPrinter.php">
    <DeprecatedInterface>
      <code><![CDATA[XmlResultPrinter]]></code>
    </DeprecatedInterface>
    <MissingThrowsDocblock>
      <code><![CDATA[parent::__construct($out)]]></code>
      <code><![CDATA[throw new Exception(
                    $e->getMessage(),
                    $e->getCode(),
                    $e,
                );]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/Util/TextTestListRenderer.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$suite->getIterator()]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Util/VersionComparisonOperator.php">
    <MissingThrowsDocblock>
      <code><![CDATA[ensureOperatorIsValid]]></code>
    </MissingThrowsDocblock>
  </file>
  <file src="src/Util/Xml.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$item]]></code>
    </ArgumentTypeCoercion>
    <InvalidStringClass>
      <code><![CDATA[new $className]]></code>
    </InvalidStringClass>
    <LessSpecificReturnStatement>
      <code><![CDATA[(new DOMDocument)->importNode($element, true)]]></code>
    </LessSpecificReturnStatement>
    <MissingReturnType>
      <code><![CDATA[xmlToVariable]]></code>
    </MissingReturnType>
    <MissingThrowsDocblock>
      <code><![CDATA[throw new Exception(
                            $e->getMessage(),
                            $e->getCode(),
                            $e,
                        );]]></code>
    </MissingThrowsDocblock>
    <MoreSpecificReturnType>
      <code><![CDATA[DOMElement]]></code>
    </MoreSpecificReturnType>
    <RedundantCast>
      <code><![CDATA[(string) $entry->getAttribute('key')]]></code>
    </RedundantCast>
  </file>
  <file src="src/Util/XmlTestListRenderer.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$suite->getIterator()]]></code>
    </ArgumentTypeCoercion>
  </file>
</files>
